server.port=8088

# 指定配置环境
#spring.profiles.active=prod

mydog.name=lucky
#spring.aop.auto=
#spring.aop.proxy-target-class=false
#spring.mvc.throw-exception-if-no-handler-found=
#debug=true
#spring.banner.image.location=classpath:banner1.png
#spring.batch.job.enabled=true

#spring.web.resources.static-locations=classpath:/resources/static
#开启页面from表单rest风格配置
spring.mvc.hiddenmethod.filter.enabled=true

#编码格式
server.servlet.encoding.force=true
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

#开启请求参数内容协商模式
spring.mvc.contentnegotiation.favor-parameter=true

#spring.thymeleaf.prefix=classpath:/templates/"
#spring.thymeleaf.suffix=.html

#设置文件上传大小限制
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB

#修改servlet默认请求路径
#spring.mvc.servlet.path=/my

#修改内嵌tomcat 配置 ServerProperties
#server.tomcat.basedir=

#数据库连接配置
#spring.datasource.url=jdbc:mysql://localhost:3306/study_db2
#spring.datasource.username=root
#spring.datasource.password=123456
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#Druid配置
#开启StatViewServlet配置(整体的监控功能/监控页)
#spring.datasource.druid.stat-view-servlet.enabled=true
#spring.datasource.druid.stat-view-servlet.url-pattern=/dddd/*
#spring.datasource.druid.stat-view-servlet.login-username=druid
#spring.datasource.druid.stat-view-servlet.login-password=123456

#开启内置filters
spring.datasource.druid.filters=stat,wall

#配置Spring Aop 监控
spring.datasource.druid.aop-patterns=com.example.running.*

#开启WebStatFilter配置(Web监控)
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*

# Druid filter配置
# 个性化配置StatFilter
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000

# 个性化配置WallFilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
# 是否允许删除
spring.datasource.druid.filter.wall.config.delete-allow=true
spring.datasource.druid.filter.wall.config.drop-table-allow=false

# mybatis配置  全局配置/mapper映射
# 指定全局配置文件路径
# mybatis.config-location=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

# mybatis 个性化配置 (也可在 mybatis-config.xml 中配置), 与mybatis.config-location 配置冲突, 只能存在一个配置
# 是否开启驼峰命名自动映射
mybatis.configuration.map-underscore-to-camel-case=true

# mybatis-plus 个性化配置
# mybatis-plus.config-location=

# redis 配置
# spring.redis.url=redis://:@localhost:6379
# 指定数据库索引
# spring.redis.database=0
# 指定客户端连接类型
# spring.redis.client-type=jedis

# actuator 监控
# 通过 HTTP 公开除env和beans端点之外的所有内容
management.endpoints.web.exposure.include=*
# management.endpoints.web.exposure.exclude=env,beans
management.endpoint.health.show-details=always
# 单独开启某个端点
# management.endpoint.health.enabled=true

# 配置自定义starter 配置
helloqwq.prefix=就这
helloqwq.suffix=666
